//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Evolutyz.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EvolutyzCornerDataEntities : DbContext
    {
        public EvolutyzCornerDataEntities()
            : base("name=EvolutyzCornerDataEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Acc_Spec_OptionalHolidays> Acc_Spec_OptionalHolidays { get; set; }
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<AccountClient> AccountClients { get; set; }
        public virtual DbSet<AccountDepartment> AccountDepartments { get; set; }
        public virtual DbSet<AccountSocialMediaProfile> AccountSocialMediaProfiles { get; set; }
        public virtual DbSet<AccountSpecificTask> AccountSpecificTasks { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<ClientProject> ClientProjects { get; set; }
        public virtual DbSet<ClientProjectsTask> ClientProjectsTasks { get; set; }
        public virtual DbSet<ClientsBusiness> ClientsBusinesses { get; set; }
        public virtual DbSet<ComponentType> ComponentTypes { get; set; }
        public virtual DbSet<ContentType> ContentTypes { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<DocumentType> DocumentTypes { get; set; }
        public virtual DbSet<EmployeeBankDetail> EmployeeBankDetails { get; set; }
        public virtual DbSet<EmployeeSalaryComponent> EmployeeSalaryComponents { get; set; }
        public virtual DbSet<EmployeeSalarySlip> EmployeeSalarySlips { get; set; }
        public virtual DbSet<EmployeeSalaryStructure> EmployeeSalaryStructures { get; set; }
        public virtual DbSet<EmployeeSalaryStructureDetail> EmployeeSalaryStructureDetails { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<FinancialYear> FinancialYears { get; set; }
        public virtual DbSet<GenericRole> GenericRoles { get; set; }
        public virtual DbSet<GenericTask> GenericTasks { get; set; }
        public virtual DbSet<History_Account> History_Account { get; set; }
        public virtual DbSet<History_LeaveScheme> History_LeaveScheme { get; set; }
        public virtual DbSet<History_LeaveType> History_LeaveType { get; set; }
        public virtual DbSet<History_Projects> History_Projects { get; set; }
        public virtual DbSet<History_Role> History_Role { get; set; }
        public virtual DbSet<History_UserProjects> History_UserProjects { get; set; }
        public virtual DbSet<History_Users> History_Users { get; set; }
        public virtual DbSet<History_UserType> History_UserType { get; set; }
        public virtual DbSet<HolidayCalendar> HolidayCalendars { get; set; }
        public virtual DbSet<LeaveScheme> LeaveSchemes { get; set; }
        public virtual DbSet<LeaveStatu> LeaveStatus { get; set; }
        public virtual DbSet<LeaveType> LeaveTypes { get; set; }
        public virtual DbSet<Master_Module> Master_Module { get; set; }
        public virtual DbSet<Master_Sub_Module> Master_Sub_Module { get; set; }
        public virtual DbSet<Master_TimesheetMode> Master_TimesheetMode { get; set; }
        public virtual DbSet<MobileNotificationTemplate> MobileNotificationTemplates { get; set; }
        public virtual DbSet<ModuleAccessType> ModuleAccessTypes { get; set; }
        public virtual DbSet<NewsBoard> NewsBoards { get; set; }
        public virtual DbSet<PayMode> PayModes { get; set; }
        public virtual DbSet<Phase> Phases { get; set; }
        public virtual DbSet<Policy> Policies { get; set; }
        public virtual DbSet<Project_workstatus> Project_workstatus { get; set; }
        public virtual DbSet<ProjectPhas> ProjectPhases { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<ProjectSpecificTask> ProjectSpecificTasks { get; set; }
        public virtual DbSet<RoleModule> RoleModules { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<SalarySlipDetail> SalarySlipDetails { get; set; }
        public virtual DbSet<Skill> Skills { get; set; }
        public virtual DbSet<SocialMedia> SocialMedias { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<SubPolicy> SubPolicies { get; set; }
        public virtual DbSet<SubPolicyDocument> SubPolicyDocuments { get; set; }
        public virtual DbSet<TaskDetail> TaskDetails { get; set; }
        public virtual DbSet<TIMESHEET> TIMESHEETs { get; set; }
        public virtual DbSet<UserDevicesToken> UserDevicesTokens { get; set; }
        public virtual DbSet<UserGender> UserGenders { get; set; }
        public virtual DbSet<UserLeaf> UserLeaves { get; set; }
        public virtual DbSet<UserLeaveTypeConsumed> UserLeaveTypeConsumeds { get; set; }
        public virtual DbSet<UserProjectEngagement> UserProjectEngagements { get; set; }
        public virtual DbSet<UserProject> UserProjects { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UsersForProject> UsersForProjects { get; set; }
        public virtual DbSet<UserSkill> UserSkills { get; set; }
        public virtual DbSet<UserSocialMediaProfile> UserSocialMediaProfiles { get; set; }
        public virtual DbSet<UsersProfile> UsersProfiles { get; set; }
        public virtual DbSet<UserTitle> UserTitles { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<UserworkfromHome> UserworkfromHomes { get; set; }
    
        [DbFunction("EvolutyzCornerDataEntities", "fn_CountWeekDays")]
        public virtual IQueryable<fn_CountWeekDays_Result> fn_CountWeekDays(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_CountWeekDays_Result>("[EvolutyzCornerDataEntities].[fn_CountWeekDays](@fromdate, @todate)", fromdateParameter, todateParameter);
        }
    
        [DbFunction("EvolutyzCornerDataEntities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[EvolutyzCornerDataEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual int AddorEditUsersProfileByUser(Nullable<int> userID, string usrFname, string usrLname, string usrEmpId, string usrEmailId, string userMobilenum, string phoneNum, string user_ProfilePath, Nullable<System.DateTime> usrDob, Nullable<System.DateTime> usrDoj, ObjectParameter userProfileID, ObjectParameter trans_Output)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var usrFnameParameter = usrFname != null ?
                new ObjectParameter("UsrFname", usrFname) :
                new ObjectParameter("UsrFname", typeof(string));
    
            var usrLnameParameter = usrLname != null ?
                new ObjectParameter("UsrLname", usrLname) :
                new ObjectParameter("UsrLname", typeof(string));
    
            var usrEmpIdParameter = usrEmpId != null ?
                new ObjectParameter("UsrEmpId", usrEmpId) :
                new ObjectParameter("UsrEmpId", typeof(string));
    
            var usrEmailIdParameter = usrEmailId != null ?
                new ObjectParameter("UsrEmailId", usrEmailId) :
                new ObjectParameter("UsrEmailId", typeof(string));
    
            var userMobilenumParameter = userMobilenum != null ?
                new ObjectParameter("UserMobilenum", userMobilenum) :
                new ObjectParameter("UserMobilenum", typeof(string));
    
            var phoneNumParameter = phoneNum != null ?
                new ObjectParameter("PhoneNum", phoneNum) :
                new ObjectParameter("PhoneNum", typeof(string));
    
            var user_ProfilePathParameter = user_ProfilePath != null ?
                new ObjectParameter("User_ProfilePath", user_ProfilePath) :
                new ObjectParameter("User_ProfilePath", typeof(string));
    
            var usrDobParameter = usrDob.HasValue ?
                new ObjectParameter("UsrDob", usrDob) :
                new ObjectParameter("UsrDob", typeof(System.DateTime));
    
            var usrDojParameter = usrDoj.HasValue ?
                new ObjectParameter("UsrDoj", usrDoj) :
                new ObjectParameter("UsrDoj", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddorEditUsersProfileByUser", userIDParameter, usrFnameParameter, usrLnameParameter, usrEmpIdParameter, usrEmailIdParameter, userMobilenumParameter, phoneNumParameter, user_ProfilePathParameter, usrDobParameter, usrDojParameter, userProfileID, trans_Output);
        }
    
        public virtual int AddSubmitTaskDetails(Nullable<int> timesheetID, Nullable<int> projectID, Nullable<int> taskID, string hoursWorked, Nullable<System.DateTime> taskDate)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var hoursWorkedParameter = hoursWorked != null ?
                new ObjectParameter("HoursWorked", hoursWorked) :
                new ObjectParameter("HoursWorked", typeof(string));
    
            var taskDateParameter = taskDate.HasValue ?
                new ObjectParameter("TaskDate", taskDate) :
                new ObjectParameter("TaskDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSubmitTaskDetails", timesheetIDParameter, projectIDParameter, taskIDParameter, hoursWorkedParameter, taskDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddSubmitTimesheetWeb(Nullable<int> userID, Nullable<System.DateTime> timesheetMonth, string comments, string submittedType, Nullable<bool> l1ApproverStatus, string l2ApproverStatus, ObjectParameter timesheetID, ObjectParameter trans_Output)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var timesheetMonthParameter = timesheetMonth.HasValue ?
                new ObjectParameter("TimesheetMonth", timesheetMonth) :
                new ObjectParameter("TimesheetMonth", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var submittedTypeParameter = submittedType != null ?
                new ObjectParameter("SubmittedType", submittedType) :
                new ObjectParameter("SubmittedType", typeof(string));
    
            var l1ApproverStatusParameter = l1ApproverStatus.HasValue ?
                new ObjectParameter("L1ApproverStatus", l1ApproverStatus) :
                new ObjectParameter("L1ApproverStatus", typeof(bool));
    
            var l2ApproverStatusParameter = l2ApproverStatus != null ?
                new ObjectParameter("L2ApproverStatus", l2ApproverStatus) :
                new ObjectParameter("L2ApproverStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddSubmitTimesheetWeb", userIDParameter, timesheetMonthParameter, commentsParameter, submittedTypeParameter, l1ApproverStatusParameter, l2ApproverStatusParameter, timesheetID, trans_Output);
        }
    
        public virtual ObjectResult<Nullable<int>> AlexaSubmitTimesheet(Nullable<int> userID, Nullable<int> month)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AlexaSubmitTimesheet", userIDParameter, monthParameter);
        }
    
        public virtual int ChangeOrUpdatePasswd(string userLoginId, string currentPassword, string newPassword, ObjectParameter flag)
        {
            var userLoginIdParameter = userLoginId != null ?
                new ObjectParameter("UserLoginId", userLoginId) :
                new ObjectParameter("UserLoginId", typeof(string));
    
            var currentPasswordParameter = currentPassword != null ?
                new ObjectParameter("CurrentPassword", currentPassword) :
                new ObjectParameter("CurrentPassword", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeOrUpdatePasswd", userLoginIdParameter, currentPasswordParameter, newPasswordParameter, flag);
        }
    
        public virtual int CreateDefaultRoles(string accountID)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateDefaultRoles", accountIDParameter);
        }
    
        public virtual int EditSubmitTaskDetails(Nullable<int> timesheetID, Nullable<int> projectID, Nullable<int> taskId, string hoursWorked, Nullable<System.DateTime> taskDate, ObjectParameter trans_Output)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("TaskId", taskId) :
                new ObjectParameter("TaskId", typeof(int));
    
            var hoursWorkedParameter = hoursWorked != null ?
                new ObjectParameter("HoursWorked", hoursWorked) :
                new ObjectParameter("HoursWorked", typeof(string));
    
            var taskDateParameter = taskDate.HasValue ?
                new ObjectParameter("TaskDate", taskDate) :
                new ObjectParameter("TaskDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditSubmitTaskDetails", timesheetIDParameter, projectIDParameter, taskIdParameter, hoursWorkedParameter, taskDateParameter, trans_Output);
        }
    
        public virtual int EditWeeklySubmitTaskDetails(Nullable<int> timesheetID, Nullable<int> accTaskID, string hoursWorked, Nullable<System.DateTime> taskDate, Nullable<int> projectID, Nullable<int> proj_SpecificTaskId, ObjectParameter trans_Output)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var accTaskIDParameter = accTaskID.HasValue ?
                new ObjectParameter("AccTaskID", accTaskID) :
                new ObjectParameter("AccTaskID", typeof(int));
    
            var hoursWorkedParameter = hoursWorked != null ?
                new ObjectParameter("HoursWorked", hoursWorked) :
                new ObjectParameter("HoursWorked", typeof(string));
    
            var taskDateParameter = taskDate.HasValue ?
                new ObjectParameter("TaskDate", taskDate) :
                new ObjectParameter("TaskDate", typeof(System.DateTime));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var proj_SpecificTaskIdParameter = proj_SpecificTaskId.HasValue ?
                new ObjectParameter("Proj_SpecificTaskId", proj_SpecificTaskId) :
                new ObjectParameter("Proj_SpecificTaskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditWeeklySubmitTaskDetails", timesheetIDParameter, accTaskIDParameter, hoursWorkedParameter, taskDateParameter, projectIDParameter, proj_SpecificTaskIdParameter, trans_Output);
        }
    
        public virtual ObjectResult<Get_EmailsByProjectId_Result> Get_EmailsByProjectId(Nullable<int> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_EmailsByProjectId_Result>("Get_EmailsByProjectId", projectIdParameter);
        }
    
        public virtual ObjectResult<Get_LeavesCount_Result> Get_LeavesCount(Nullable<int> userId, string dateOfMonth)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var dateOfMonthParameter = dateOfMonth != null ?
                new ObjectParameter("DateOfMonth", dateOfMonth) :
                new ObjectParameter("DateOfMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_LeavesCount_Result>("Get_LeavesCount", userIdParameter, dateOfMonthParameter);
        }
    
        public virtual ObjectResult<Get_ManagerEmailDetails_Result> Get_ManagerEmailDetails(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_ManagerEmailDetails_Result>("Get_ManagerEmailDetails", userIdParameter);
        }
    
        public virtual ObjectResult<Get_Managers_Result> Get_Managers(Nullable<int> accountID, Nullable<int> roleId)
        {
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Managers_Result>("Get_Managers", accountIDParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<Get_UserLeaves_Result> Get_UserLeaves(Nullable<int> userId, string monthYear)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var monthYearParameter = monthYear != null ?
                new ObjectParameter("MonthYear", monthYear) :
                new ObjectParameter("MonthYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_UserLeaves_Result>("Get_UserLeaves", userIdParameter, monthYearParameter);
        }
    
        public virtual ObjectResult<Get_UserLeavesCount_Result> Get_UserLeavesCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_UserLeavesCount_Result>("Get_UserLeavesCount");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> Get_UserLeavesforTimesheet(Nullable<int> userId, string monthYear)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var monthYearParameter = monthYear != null ?
                new ObjectParameter("MonthYear", monthYear) :
                new ObjectParameter("MonthYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("Get_UserLeavesforTimesheet", userIdParameter, monthYearParameter);
        }
    
        public virtual ObjectResult<Get_UserWorkFromHome_Result> Get_UserWorkFromHome()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_UserWorkFromHome_Result>("Get_UserWorkFromHome");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> Get_WorkfromHomeTimesheet(Nullable<int> userId, string monthYear)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var monthYearParameter = monthYear != null ?
                new ObjectParameter("MonthYear", monthYear) :
                new ObjectParameter("MonthYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("Get_WorkfromHomeTimesheet", userIdParameter, monthYearParameter);
        }
    
        public virtual ObjectResult<GetDashBoardTimesheet_Result> GetDashBoardTimesheet(string userid, Nullable<int> startPosition, Nullable<int> endPosition)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var startPositionParameter = startPosition.HasValue ?
                new ObjectParameter("StartPosition", startPosition) :
                new ObjectParameter("StartPosition", typeof(int));
    
            var endPositionParameter = endPosition.HasValue ?
                new ObjectParameter("EndPosition", endPosition) :
                new ObjectParameter("EndPosition", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDashBoardTimesheet_Result>("GetDashBoardTimesheet", useridParameter, startPositionParameter, endPositionParameter);
        }
    
        public virtual ObjectResult<GetLeaveCategoreries_Result> GetLeaveCategoreries(string userid, Nullable<System.DateTime> year)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLeaveCategoreries_Result>("GetLeaveCategoreries", useridParameter, yearParameter);
        }
    
        public virtual ObjectResult<GetManagerEmailIds_Result> GetManagerEmailIds(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetManagerEmailIds_Result>("GetManagerEmailIds", userIDParameter);
        }
    
        public virtual ObjectResult<GetProfileDetails_Result> GetProfileDetails(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProfileDetails_Result>("GetProfileDetails", useridParameter);
        }
    
        public virtual ObjectResult<getTimeSheetEmailDetails_Result> getTimeSheetEmailDetails(string userid, Nullable<System.DateTime> timesheetmonth)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetmonthParameter = timesheetmonth.HasValue ?
                new ObjectParameter("Timesheetmonth", timesheetmonth) :
                new ObjectParameter("Timesheetmonth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTimeSheetEmailDetails_Result>("getTimeSheetEmailDetails", useridParameter, timesheetmonthParameter);
        }
    
        public virtual ObjectResult<GetTimeSheetforApprovalTesting_Result> GetTimeSheetforApprovalTesting(string userid, Nullable<int> startPosition, Nullable<int> endPosition)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var startPositionParameter = startPosition.HasValue ?
                new ObjectParameter("StartPosition", startPosition) :
                new ObjectParameter("StartPosition", typeof(int));
    
            var endPositionParameter = endPosition.HasValue ?
                new ObjectParameter("EndPosition", endPosition) :
                new ObjectParameter("EndPosition", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimeSheetforApprovalTesting_Result>("GetTimeSheetforApprovalTesting", useridParameter, startPositionParameter, endPositionParameter);
        }
    
        public virtual ObjectResult<GetUserHolidayCalender_Result> GetUserHolidayCalender(string userID, string userAccontID, string holidaySelectionDate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var userAccontIDParameter = userAccontID != null ?
                new ObjectParameter("UserAccontID", userAccontID) :
                new ObjectParameter("UserAccontID", typeof(string));
    
            var holidaySelectionDateParameter = holidaySelectionDate != null ?
                new ObjectParameter("HolidaySelectionDate", holidaySelectionDate) :
                new ObjectParameter("HolidaySelectionDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserHolidayCalender_Result>("GetUserHolidayCalender", userIDParameter, userAccontIDParameter, holidaySelectionDateParameter);
        }
    
        public virtual ObjectResult<GetUsersDatabyLogin_Result> GetUsersDatabyLogin(string userid, string password)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsersDatabyLogin_Result>("GetUsersDatabyLogin", useridParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GetUserTimeSheetList_Result> GetUserTimeSheetList(string userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> endDate)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserTimeSheetList_Result>("GetUserTimeSheetList", useridParameter, fromdateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetUserWorkFrmHomeApproval_Result> GetUserWorkFrmHomeApproval(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserWorkFrmHomeApproval_Result>("GetUserWorkFrmHomeApproval", useridParameter);
        }
    
        public virtual ObjectResult<Insert_AccountSpecificTasks_Result> Insert_AccountSpecificTasks(Nullable<int> accountID)
        {
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Insert_AccountSpecificTasks_Result>("Insert_AccountSpecificTasks", accountIDParameter);
        }
    
        public virtual int Insert_UserLeaves(Nullable<int> userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, ObjectParameter message)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_UserLeaves", userIDParameter, startDateParameter, endDateParameter, message);
        }
    
        public virtual ObjectResult<Nullable<int>> Insert_UserLeavesConsumed(Nullable<int> userLeaveId, Nullable<int> no_Of_Days, Nullable<int> leaveTypeID)
        {
            var userLeaveIdParameter = userLeaveId.HasValue ?
                new ObjectParameter("UserLeaveId", userLeaveId) :
                new ObjectParameter("UserLeaveId", typeof(int));
    
            var no_Of_DaysParameter = no_Of_Days.HasValue ?
                new ObjectParameter("No_Of_Days", no_Of_Days) :
                new ObjectParameter("No_Of_Days", typeof(int));
    
            var leaveTypeIDParameter = leaveTypeID.HasValue ?
                new ObjectParameter("LeaveTypeID", leaveTypeID) :
                new ObjectParameter("LeaveTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_UserLeavesConsumed", userLeaveIdParameter, no_Of_DaysParameter, leaveTypeIDParameter);
        }
    
        public virtual int Insert_UserWorkFromHome(Nullable<int> usrl_UserId, Nullable<System.DateTime> userwfhStartDate, Nullable<System.DateTime> userwfhEndDate, string comments, Nullable<System.DateTime> createdDate, Nullable<bool> is_WorkFromHome)
        {
            var usrl_UserIdParameter = usrl_UserId.HasValue ?
                new ObjectParameter("Usrl_UserId", usrl_UserId) :
                new ObjectParameter("Usrl_UserId", typeof(int));
    
            var userwfhStartDateParameter = userwfhStartDate.HasValue ?
                new ObjectParameter("UserwfhStartDate", userwfhStartDate) :
                new ObjectParameter("UserwfhStartDate", typeof(System.DateTime));
    
            var userwfhEndDateParameter = userwfhEndDate.HasValue ?
                new ObjectParameter("UserwfhEndDate", userwfhEndDate) :
                new ObjectParameter("UserwfhEndDate", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var is_WorkFromHomeParameter = is_WorkFromHome.HasValue ?
                new ObjectParameter("Is_WorkFromHome", is_WorkFromHome) :
                new ObjectParameter("Is_WorkFromHome", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_UserWorkFromHome", usrl_UserIdParameter, userwfhStartDateParameter, userwfhEndDateParameter, commentsParameter, createdDateParameter, is_WorkFromHomeParameter);
        }
    
        public virtual int InsertUserLeaves(Nullable<int> userId, Nullable<System.DateTime> leaveStartDate, Nullable<System.DateTime> leaveEndDate, string comments, ObjectParameter userLeaveId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var leaveStartDateParameter = leaveStartDate.HasValue ?
                new ObjectParameter("LeaveStartDate", leaveStartDate) :
                new ObjectParameter("LeaveStartDate", typeof(System.DateTime));
    
            var leaveEndDateParameter = leaveEndDate.HasValue ?
                new ObjectParameter("LeaveEndDate", leaveEndDate) :
                new ObjectParameter("LeaveEndDate", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUserLeaves", userIdParameter, leaveStartDateParameter, leaveEndDateParameter, commentsParameter, userLeaveId);
        }
    
        public virtual ObjectResult<MailsAppOrRejStatus_Result> MailsAppOrRejStatus(string timesheetID)
        {
            var timesheetIDParameter = timesheetID != null ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MailsAppOrRejStatus_Result>("MailsAppOrRejStatus", timesheetIDParameter);
        }
    
        public virtual int ManagerActionsfromEmail(Nullable<int> userid, Nullable<int> timesheetID, Nullable<int> managerId, string comments, Nullable<int> projectid, string submittedType, ObjectParameter trans_Output)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var managerIdParameter = managerId.HasValue ?
                new ObjectParameter("ManagerId", managerId) :
                new ObjectParameter("ManagerId", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(int));
    
            var submittedTypeParameter = submittedType != null ?
                new ObjectParameter("SubmittedType", submittedType) :
                new ObjectParameter("SubmittedType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ManagerActionsfromEmail", useridParameter, timesheetIDParameter, managerIdParameter, commentsParameter, projectidParameter, submittedTypeParameter, trans_Output);
        }
    
        public virtual ObjectResult<sp_GetLeaveTypes_Result> sp_GetLeaveTypes(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetLeaveTypes_Result>("sp_GetLeaveTypes", userIdParameter);
        }
    
        public virtual ObjectResult<Sp_GetProjects_Result> Sp_GetProjects()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetProjects_Result>("Sp_GetProjects");
        }
    
        public virtual ObjectResult<Sp_GetProjSpecificTasks_Result> Sp_GetProjSpecificTasks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetProjSpecificTasks_Result>("Sp_GetProjSpecificTasks");
        }
    
        public virtual ObjectResult<Sp_GetTasks_Result> Sp_GetTasks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetTasks_Result>("Sp_GetTasks");
        }
    
        public virtual ObjectResult<string> sp_month_dates(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_month_dates", dateParameter);
        }
    
        public virtual ObjectResult<TempSubmitTimesheet_Result> TempSubmitTimesheet(Nullable<System.DateTime> timesheetMonth, Nullable<int> userid, Nullable<int> accountid, string projectid)
        {
            var timesheetMonthParameter = timesheetMonth.HasValue ?
                new ObjectParameter("timesheetMonth", timesheetMonth) :
                new ObjectParameter("timesheetMonth", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("Accountid", accountid) :
                new ObjectParameter("Accountid", typeof(int));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TempSubmitTimesheet_Result>("TempSubmitTimesheet", timesheetMonthParameter, useridParameter, accountidParameter, projectidParameter);
        }
    
        public virtual ObjectResult<TempTimesheetonLeavesandHolidays_Result> TempTimesheetonLeavesandHolidays(Nullable<System.DateTime> timesheetMonth, Nullable<int> userid, Nullable<int> accountid, string projectid)
        {
            var timesheetMonthParameter = timesheetMonth.HasValue ?
                new ObjectParameter("timesheetMonth", timesheetMonth) :
                new ObjectParameter("timesheetMonth", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("Accountid", accountid) :
                new ObjectParameter("Accountid", typeof(int));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TempTimesheetonLeavesandHolidays_Result>("TempTimesheetonLeavesandHolidays", timesheetMonthParameter, useridParameter, accountidParameter, projectidParameter);
        }
    
        public virtual int TimesheetManagerActions(Nullable<int> userid, Nullable<int> timesheetID, Nullable<int> managerId, string comments, string submittedType, ObjectParameter trans_Output)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var managerIdParameter = managerId.HasValue ?
                new ObjectParameter("ManagerId", managerId) :
                new ObjectParameter("ManagerId", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var submittedTypeParameter = submittedType != null ?
                new ObjectParameter("SubmittedType", submittedType) :
                new ObjectParameter("SubmittedType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TimesheetManagerActions", useridParameter, timesheetIDParameter, managerIdParameter, commentsParameter, submittedTypeParameter, trans_Output);
        }
    
        public virtual ObjectResult<UserAuthenticateWithToken_Result> UserAuthenticateWithToken(string userid, string password, string token, string loginType, ObjectParameter message)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var loginTypeParameter = loginType != null ?
                new ObjectParameter("loginType", loginType) :
                new ObjectParameter("loginType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserAuthenticateWithToken_Result>("UserAuthenticateWithToken", useridParameter, passwordParameter, tokenParameter, loginTypeParameter, message);
        }
    
        public virtual int UserLeaveManagerActionsfromEmail(Nullable<int> userid, Nullable<int> leaveID, Nullable<int> managerId, Nullable<int> statusType, ObjectParameter trans_Output)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var leaveIDParameter = leaveID.HasValue ?
                new ObjectParameter("LeaveID", leaveID) :
                new ObjectParameter("LeaveID", typeof(int));
    
            var managerIdParameter = managerId.HasValue ?
                new ObjectParameter("ManagerId", managerId) :
                new ObjectParameter("ManagerId", typeof(int));
    
            var statusTypeParameter = statusType.HasValue ?
                new ObjectParameter("StatusType", statusType) :
                new ObjectParameter("StatusType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserLeaveManagerActionsfromEmail", useridParameter, leaveIDParameter, managerIdParameter, statusTypeParameter, trans_Output);
        }
    
        public virtual int UserWFHManagerActionsfromEmail(Nullable<int> userid, Nullable<int> wFHID, Nullable<int> managerId, Nullable<int> statusType, ObjectParameter trans_Output)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var wFHIDParameter = wFHID.HasValue ?
                new ObjectParameter("WFHID", wFHID) :
                new ObjectParameter("WFHID", typeof(int));
    
            var managerIdParameter = managerId.HasValue ?
                new ObjectParameter("ManagerId", managerId) :
                new ObjectParameter("ManagerId", typeof(int));
    
            var statusTypeParameter = statusType.HasValue ?
                new ObjectParameter("StatusType", statusType) :
                new ObjectParameter("StatusType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserWFHManagerActionsfromEmail", useridParameter, wFHIDParameter, managerIdParameter, statusTypeParameter, trans_Output);
        }
    
        public virtual int WebEditSubmitTaskDetails(Nullable<int> timesheetID, Nullable<int> taskId, string hoursWorked, Nullable<System.DateTime> taskDate, ObjectParameter trans_Output)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("TaskId", taskId) :
                new ObjectParameter("TaskId", typeof(int));
    
            var hoursWorkedParameter = hoursWorked != null ?
                new ObjectParameter("HoursWorked", hoursWorked) :
                new ObjectParameter("HoursWorked", typeof(string));
    
            var taskDateParameter = taskDate.HasValue ?
                new ObjectParameter("TaskDate", taskDate) :
                new ObjectParameter("TaskDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WebEditSubmitTaskDetails", timesheetIDParameter, taskIdParameter, hoursWorkedParameter, taskDateParameter, trans_Output);
        }
    
        public virtual int WebEditSubmitTimesheet(Nullable<int> timesheetID, Nullable<int> userID, string comments, string submittedType, ObjectParameter trans_Output)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var submittedTypeParameter = submittedType != null ?
                new ObjectParameter("SubmittedType", submittedType) :
                new ObjectParameter("SubmittedType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WebEditSubmitTimesheet", timesheetIDParameter, userIDParameter, commentsParameter, submittedTypeParameter, trans_Output);
        }
    
        public virtual ObjectResult<WebGetProfileDetails_Result> WebGetProfileDetails(Nullable<int> userProfileid)
        {
            var userProfileidParameter = userProfileid.HasValue ?
                new ObjectParameter("UserProfileid", userProfileid) :
                new ObjectParameter("UserProfileid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebGetProfileDetails_Result>("WebGetProfileDetails", userProfileidParameter);
        }
    
        public virtual ObjectResult<WebGetTimeSheetforApproval_Result> WebGetTimeSheetforApproval(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebGetTimeSheetforApproval_Result>("WebGetTimeSheetforApproval", useridParameter);
        }
    
        public virtual ObjectResult<WebgetUserTimesheet_Result> WebgetUserTimesheet(string userid, Nullable<System.DateTime> timesheetmonth)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetmonthParameter = timesheetmonth.HasValue ?
                new ObjectParameter("Timesheetmonth", timesheetmonth) :
                new ObjectParameter("Timesheetmonth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebgetUserTimesheet_Result>("WebgetUserTimesheet", useridParameter, timesheetmonthParameter);
        }
    
        public virtual int WebValidTimesheetMonthExits(Nullable<int> userID, Nullable<System.DateTime> timesheetMonth, ObjectParameter trans_Output)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var timesheetMonthParameter = timesheetMonth.HasValue ?
                new ObjectParameter("TimesheetMonth", timesheetMonth) :
                new ObjectParameter("TimesheetMonth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WebValidTimesheetMonthExits", userIDParameter, timesheetMonthParameter, trans_Output);
        }
    
        public virtual ObjectResult<GetUserLeavesforApproval_Result> GetUserLeavesforApproval(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserLeavesforApproval_Result>("GetUserLeavesforApproval", useridParameter);
        }
    }
}
