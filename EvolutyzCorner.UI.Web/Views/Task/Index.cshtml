@model Evolutyz.Entities.AccountSpecifictasks
@{
    ViewBag.Title = "Task Management";

    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
@*<script src="~/Scripts/jquery.validate.js"></script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.10.0/jquery.validate.min.js"></script>
<link href="~/plugins/datatables/dataTables.bootstrap.css" rel="stylesheet" />
<script src="~/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/plugins/datatables/dataTables.bootstrap.min.js"></script>
<script src="~/Scripts/date.format.js"></script>

<script src="~/Scripts/bootstrap-datepicker.js"></script>
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>


<style>
    .form-control.validate_msg + span.field-validation-valid:before {
        content: "";
        position: absolute;
        bottom: -15px;
        left: 15px;
        font-size: 10px;
        color: red;
    }
    label.error {
        position: absolute;
        bottom: -20px;
        left: 15px;
        font-size: 10px;
        color: red;
    }
    input#Acc_SpecificTaskName.validate_msg + span:before {
        content: "Already Task Existed";
    }


    .box.box-solid.box-brown {
        border: 1px solid #aaaaaa;
    }

    a.btn-icn {
        display: none
    }

    a.btn-icn-hide {
        display: inline-block
    }

    .box.box-solid.box-brown > .box-header {
        /*background-color: #a3765b;
        color: #fff;*/
        border-color: #aaaaaa;
        background: #cccccc url(../Content/themes/base/images/ui-bg_highlight-soft_75_cccccc_1x100.png) 50% 50% repeat-x;
        color: #222222;
    }

    .box.box-solid.box-brown .btn-warning {
        background-color: #f97045;
        border-color: #fe450b;
    }

    .box.box-solid.box-brown .btn-success {
        background-color: #fea728;
        border-color: #FF9800;
    }

    #divhiduserid ~ label {
        margin: 7px auto;
    }
</style>


<div class="block-content">
    <div class="page-index">
        <h4 class="heading-fancy"> Account Specific Tasks </h4>
        <input type="button" id="btnAddModel" value="+" data-toggle="modal" data-target="#ContainerGridDetail" class="btn" />
    </div>
    <div class="table-responsive">
        <div class="clearfix table-block">
            <table id="table">
                <thead>
                    <tr>
                        <th>Acc_SpecificTaskId</th>
                        <th>Account Name</th>
                        <th>Account SpecificTaskName</th>
                        <th>Task Name</th>
                        <th>Status</th>
                        <th id="actions">Actions</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>



<div class="modal fade-in" id="ContainerGridDetail" role="dialog">

    <div class="modal-dialog">
        @*<label id="succ"></label>*@
        <div class="modal-content">
            <div class="modal-header">

                <h4 class="modal-title">Add ProjectSpecific Task</h4>
                <h4 class="modal-title" style="display:none">Edit ProjectSpecific Task</h4>
            </div>
            <form id="myform">
                <div class="modal-body">


                    <div class="row">
                        <div class="form-group col-md-6">
                            <label for="accountname">Account Name<font style="color:red;">*</font></label>

                            @Html.DropDownListFor(model => model.Acc_AccountID, new SelectList(ViewBag.acclist, "value", "text"), "Select Account", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Acc_AccountID)

                        </div>
                        <div class="form-group col-md-6">
                            <label for="taskname">Task Name<font style="color:red;">*</font></label>

                            @Html.DropDownListFor(model => model.tsk_TaskID, new SelectList(ViewBag.TasksList, "value", "text"), "Select Task", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.tsk_TaskID)

                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <label for="Acc_SpecificTaskName">Account SpecificTask Name<font style="color:red;">*</font></label>
                            @Html.TextBoxFor(m => m.Acc_SpecificTaskName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Acc_SpecificTaskName)

                        </div>
                        <div class="form-group col-md-6">
                            <label for="Status">Status<font style="color:red;">*</font></label>
                            @*@Html.DropDownListFor(m => m.IsDeleted, new SelectList("", ""), "Select status", new { @class = "form-control" })*@
                            @Html.DropDownListFor(m => m.StatusId, new SelectList(new List<Object>{

                            new { value = 1 , text = "Active"},
                            new { value = 0 , text = "InActive"}  }, "value", "text", 2), "Select Status", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-clr" onclick="SaveTaskDetails()" id="btnaddtask" style="display:none">Add</button>
                    <button type="submit" class="btn btn-clr" id="btnupdatetask" onclick="UpdateTaskDetails()" style="display:none">Update</button>
                    <button type="button" class="btn btn-clr1" data-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="containerDelete" class="modal" role="dialog">
    <div class="modal-dialog">
        <div id="divAdv" class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>

                <h4 class="modal-title">Delete User</h4>
            </div>
            <div class="modal-body">
                <h3>Do you really want to Delete the row</h3>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-clr" value="1" id="btnYes" onclick="DeleteTask(deltaskid)">Yes</button>
                <button type="button" class="btn btn-clr1" value="2" data-dismiss="modal" id="cancel">No</button>
            </div>
        </div>
    </div>
</div>



<script>
    $("#StatusId").val("1");
    var deltaskid;
    var accid = '@ViewBag.accid';
    $("#Acc_AccountID").val(accid);
    $(document).ready(function () {
        loaddata();
        var permissions = '@ViewBag.a';
    if (permissions.toLowerCase() === "read/write") {
        $("#btnAddModel").show();
        $("#actions").show();

    }
    else {
        $("#btnAddModel").hide();
        $("#actions").hide();

    }




        $("#btnAddModel").click(function () {
            $("#btnupdatetask").hide();
            $("#btnaddtask").show();
        });
    });

    function loaddata() {
        $.ajax({
            url: "/Task/GetTaskCollection",
            type: "Get",
            dataType: "json",
            success: function (res) {

                $('#table').DataTable({
                    'data': res,
                    'paginate': true,
                    'sort': true,
                    'Processing': true,
                    'columns': [

                        { 'data': 'Acc_SpecificTaskId', 'visible': false },
                        { 'data': 'Acc_AccountName' },
                        { 'data': 'Acc_SpecificTaskName' },
                        { 'data': 'tsk_TaskName'},
                        {
                            'data': 'StatusId',
                            "render": function (StatusId, type, full, meta) {
                                if (StatusId === true) {
                                    return '<div class="statuscheck"> <input type="checkbox" id="check_01" checked onclick="UnCheckStatus(' + full.HolidayCalendarID + ')"> <label for="check_01"></label> </div>';
                                }
                                else {
                                    return '<div class="statuscheck"> <input type="checkbox" id="check_02" onclick="CheckStatus(' + full.HolidayCalendarID + ')"> <label for="check_02"></label> </div>';
                                }
                            }
                        },


                        {
                            "render": function (Acc_SpecificTaskId, type, full, meta, data) {
                                 var permissions = '@ViewBag.a';
                                if (permissions === "Read/Write")
                                {
                                    return '<a class="btn btn-icn btn-icn-hide  edit" data-toggle="modal" data-target="#ContainerGridDetail"    onclick="EditTask(' + full.Acc_SpecificTaskId + ')" ><i class="fa fa-edit"></i></a><a class="btn btn-icn btn-icn-hide"  data-toggle="modal" data-target="#containerDelete"  onclick="Getid(' + full.Acc_SpecificTaskId + ')" "><i class="fa fa-trash"></i></a>';

                                        }
                                else {
                                    return '<a class="btn btn-icn" data-toggle="modal" data-target="#ContainerGridDetail"    onclick="EditTask(' + full.Acc_SpecificTaskId + ')" ><i class="fa fa-edit"></i></a><a class="btn btn-icn"  data-toggle="modal" data-target="#containerDelete"  onclick="Getid(' + full.Acc_SpecificTaskId + ')" "><i class="fa fa-trash"></i></a>';

                                       }
                                 }

                        }

                    ]
                });

            },
            error: function (msg) {
                // alert(msg.responseText);
            }
        });
    }

    function UnCheckStatus(id) {
        $.ajax({
            url: "/Task/ChangeStatus",
            type: "POST",
            data: {
                'id': id,
                'status': false
            },

            //dataType: "json",
            success: function (data) {

                alert(data);
                window.location.reload();
            },
            complete: function () {
                $('#loading-image').attr("style", "display: none;");
            },
        });
    }
    function CheckStatus(id) {
        $.ajax({
            url: "/Task/ChangeStatus",
            type: "POST",
            data: {
                'id': id,
                'status': true
            },

            //dataType: "json",
            success: function (data) {

                alert(data);
                window.location.reload();
            },
            complete: function () {
                $('#loading-image').attr("style", "display: none;");
            },
        });
    }


    function Getid(id) {
        deltaskid = id;
    }

    function dateConversion(value) {
        if (value === null) return "";
        var pattern = /Date\(([^)]+)\)/;
        var results = pattern.exec(value);
        var dt = new Date(parseFloat(results[1]));

        return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();

    }

    function SaveTaskDetails() {
        var Acc_AccountID = $("#Acc_AccountID").val();
        var taskid = $("#tsk_TaskID").val();
        var Acc_SpecificTaskName = $("#Acc_SpecificTaskName").val();
        var status = $("#StatusId").val();

        $('#myform').validate({
            rules: {
                Acc_AccountID: {
                    required: true,
                 
                },
                tsk_TaskID: {
                    required: true,
                    date: true
                },
                Acc_SpecificTaskName: {
                    required: true,
                    regx: /^[a-zA-Z ]*$/
                },
                StatusId: {
                    required: true
                },
               

            },
            submitHandler: function (form) {
                $.ajax({
                    // contentType: 'application/json; charset=utf-8',
                    type: 'POST',
                    url: '/Task/SaveTasks',
                    data: {
                        'Acc_AccountID': Acc_AccountID,
                        'tsk_TaskID': taskid,
                        'Acc_SpecificTaskName': Acc_SpecificTaskName,
                        'StatusId': status
                    },
                    success: function (data) {
                        if (data === "Already Task Existed") {
                            $("#Acc_SpecificTaskName").addClass("validate_msg");
                        } else if (data === "Please Fill All Mandatory Fields") {
                            $("#Acc_SpecificTaskName").removeClass("validate_msg");
                            alert(data);

                            //window.location.reload();
                        }
                        else {
                            $("#Acc_SpecificTaskName").removeClass("validate_msg");
                            alert(data);

                            window.location.reload();
                        }

                    },
                    error: function (error) {
                        console.log(error);
                    }

                });

                return false;
            }
        });
        $.validator.addMethod("regx", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Please enter  Only Alphabets .");
        $.validator.addMethod("regex", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Please enter 10 Digit Number.");
        $.validator.addMethod("reg", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Please enter valid Password");
        
    }
    var proj_id;
    function EditTask(acc_spec_id) {
        $("#btnupdatetask").show();
        $("#btnaddtask").hide();
        $.ajax({
            url: "/Task/Gettaskbyid",
            type: "POST",
            data: {
                'id': acc_spec_id
            },

            dataType: "json",
            success: function (data) {
                  
                proj_id = data.Acc_SpecificTaskId;
                $("#Acc_AccountID").val(data.AccountID);
                $("#tsk_TaskID").val(data.tsk_TaskID);
                $("#Acc_SpecificTaskName").val(data.Acc_SpecificTaskName);
                var status = data.StatusId;
                if (status === true) {
                    $("#StatusId").val("1");
                } else {
                    $("#StatusId").val("0");
                }

            },
            complete: function () {
                $('#loading-image').attr("style", "display: none;");
            },

        });
    }

    function UpdateTaskDetails() {
        var Acc_AccountID = $("#Acc_AccountID").val();
        var taskid = $("#tsk_TaskID").val();
        var Acc_SpecificTaskName = $("#Acc_SpecificTaskName").val();
        var status = $("#StatusId").val();

        $('#myform').validate({
            rules: {
                Acc_AccountID: {
                    required: true,

                },
                tsk_TaskID: {
                    required: true,
                    date: true
                },
                Acc_SpecificTaskName: {
                    required: true,
                    regx: /^[a-zA-Z ]*$/
                },
                StatusId: {
                    required: true
                },


            },
            submitHandler: function (form) {
                $.ajax({
                    // contentType: 'application/json; charset=utf-8',
                    type: 'POST',
                    url: '/Task/UpdateTasks?id=' + proj_id,
                    data: {
                        'ProjectId': Acc_AccountID,
                        'tsk_TaskID': taskid,
                        'Proj_SpecificTaskName': Acc_SpecificTaskName,
                        'StatusId': status
                    },
                    success: function (data) {

                        alert(data);
                        //console.log(data);
                        window.location.reload();
                    },
                    error: function (error) {
                        console.log(error);
                    }

                });

                return false;
            }
        });
        $.validator.addMethod("regx", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Please enter  Only Alphabets .");
        $.validator.addMethod("regex", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Please enter 10 Digit Number.");
        $.validator.addMethod("reg", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Please enter valid Password");

       
    }

    function DeleteTask(delid) {
        $.ajax({
            url: "/Task/deletetaskbyid?id="+ delid,
            type: "POST",

            //dataType: "json",
            success: function (data) {
                if (data === "This Task Assigned to Some Users") {
                    alert(data);
                } else {
                    alert(data);
                    window.location.reload();
                }
               
            },
            complete: function () {
                $('#loading-image').attr("style", "display: none;");
            },

        });
    }

</script>